strategy:
  matrix:
    os: [ubuntu-latest, macos-latest]
jobs:
  Cheerios:
    needs:
    - coq
    - StructTact
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target Cheerios
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"Cheerios\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: StructTact'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "StructTact"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "Cheerios"
  CoLoR:
    needs:
    - coq
    - bignums
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target CoLoR
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"CoLoR\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: bignums'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "bignums"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "CoLoR"
  ITree:
    needs:
    - coq
    - coq-ext-lib
    - paco
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target ITree
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"ITree\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq-ext-lib'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq-ext-lib"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: paco'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "paco"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "ITree"
  InfSeqExt:
    needs:
    - coq
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target InfSeqExt
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"InfSeqExt\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "InfSeqExt"
  QuickChick:
    needs:
    - coq
    - mathcomp-ssreflect
    - coq-ext-lib
    - simple-io
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target QuickChick
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"QuickChick\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-ssreflect'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-ssreflect"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq-ext-lib'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq-ext-lib"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: simple-io'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "simple-io"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "QuickChick"
  StructTact:
    needs:
    - coq
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target StructTact
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"StructTact\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "StructTact"
  VST:
    needs:
    - coq
    - compcert
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target VST
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"VST\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: compcert'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "compcert"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "VST"
  Verdi:
    needs:
    - coq
    - Cheerios
    - InfSeqExt
    - mathcomp-ssreflect
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target Verdi
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"Verdi\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: Cheerios'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "Cheerios"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: InfSeqExt'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "InfSeqExt"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-ssreflect'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-ssreflect"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "Verdi"
  aac-tactics:
    needs:
    - coq
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target aac-tactics
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"aac-tactics\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "aac-tactics"
  autosubst:
    needs:
    - coq
    - mathcomp-ssreflect
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target autosubst
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"autosubst\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-ssreflect'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-ssreflect"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "autosubst"
  bignums:
    needs:
    - coq
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target bignums
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"bignums\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "bignums"
  compcert:
    needs:
    - coq
    - flocq
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target compcert
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"compcert\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: flocq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "flocq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "compcert"
  coq:
    needs: []
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target coq
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"coq\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
  coq-bits:
    needs:
    - coq
    - mathcomp-algebra
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target coq-bits
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"coq-bits\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-algebra'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-algebra"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq-bits"
  coq-elpi:
    needs:
    - coq
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target coq-elpi
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"coq-elpi\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq-elpi"
  coq-ext-lib:
    needs:
    - coq
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target coq-ext-lib
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"coq-ext-lib\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq-ext-lib"
  coq-shell:
    needs:
    - coq
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target coq-shell
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"coq-shell\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq-shell"
  coqeal:
    needs:
    - coq
    - mathcomp-algebra
    - bignums
    - paramcoq
    - multinomials
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target coqeal
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"coqeal\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-algebra'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-algebra"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: bignums'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "bignums"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: paramcoq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "paramcoq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: multinomials'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "multinomials"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coqeal"
  coqhammer:
    needs:
    - coq
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target coqhammer
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"coqhammer\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coqhammer"
  coqprime:
    needs:
    - coq
    - bignums
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target coqprime
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"coqprime\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: bignums'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "bignums"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coqprime"
  coquelicot:
    needs:
    - coq
    - mathcomp-ssreflect
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target coquelicot
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"coquelicot\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-ssreflect'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-ssreflect"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coquelicot"
  dpdgraph:
    needs:
    - coq
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target dpdgraph
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"dpdgraph\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "dpdgraph"
  equations:
    needs:
    - coq
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target equations
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"equations\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "equations"
  flocq:
    needs:
    - coq
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target flocq
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"flocq\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "flocq"
  fourcolor:
    needs:
    - coq
    - mathcomp-algebra
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target fourcolor
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"fourcolor\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-algebra'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-algebra"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "fourcolor"
  gappalib:
    needs:
    - coq
    - flocq
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target gappalib
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"gappalib\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: flocq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "flocq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "gappalib"
  goedel:
    needs:
    - coq
    - hydra-battles
    - pocklington
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target goedel
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"goedel\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: hydra-battles'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "hydra-battles"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: pocklington'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "pocklington"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "goedel"
  hierarchy-builder:
    needs:
    - coq
    - coq-elpi
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target hierarchy-builder
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"hierarchy-builder\" \\\n --dry-run 2>&1 >\
        \ /dev/null)\necho ::set-output name=status::$(echo $nb_dry_run | grep \"\
        built:\" | sed \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq-elpi'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq-elpi"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "hierarchy-builder"
  hydra-battles:
    needs:
    - coq
    - mathcomp
    - equations
    - paramcoq
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target hydra-battles
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"hydra-battles\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: equations'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "equations"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: paramcoq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "paramcoq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "hydra-battles"
  interval:
    needs:
    - coq
    - bignums
    - coquelicot
    - flocq
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target interval
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"interval\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: bignums'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "bignums"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coquelicot'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coquelicot"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: flocq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "flocq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "interval"
  iris:
    needs:
    - coq
    - stdpp
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target iris
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"iris\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: stdpp'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "stdpp"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "iris"
  itauto:
    needs:
    - coq
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target itauto
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"itauto\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "itauto"
  math-classes:
    needs:
    - coq
    - bignums
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target math-classes
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"math-classes\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: bignums'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "bignums"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "math-classes"
  mathcomp:
    needs:
    - coq
    - mathcomp-ssreflect
    - mathcomp-fingroup
    - mathcomp-algebra
    - mathcomp-solvable
    - mathcomp-field
    - mathcomp-character
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target mathcomp
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"mathcomp\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-ssreflect'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-ssreflect"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-fingroup'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-fingroup"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-algebra'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-algebra"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-solvable'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-solvable"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-field'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-field"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-character'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-character"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp"
  mathcomp-abel:
    needs:
    - coq
    - mathcomp-field
    - mathcomp-real-closed
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target mathcomp-abel
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"mathcomp-abel\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-field'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-field"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-real-closed'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-real-closed"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-abel"
  mathcomp-algebra:
    needs:
    - coq
    - mathcomp-ssreflect
    - mathcomp-fingroup
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target mathcomp-algebra
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"mathcomp-algebra\" \\\n --dry-run 2>&1 >\
        \ /dev/null)\necho ::set-output name=status::$(echo $nb_dry_run | grep \"\
        built:\" | sed \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-ssreflect'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-ssreflect"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-fingroup'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-fingroup"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-algebra"
  mathcomp-analysis:
    needs:
    - coq
    - mathcomp-ssreflect
    - mathcomp-field
    - mathcomp-finmap
    - mathcomp-bigenough
    - mathcomp-real-closed
    - hierarchy-builder
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target mathcomp-analysis
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"mathcomp-analysis\" \\\n --dry-run 2>&1 >\
        \ /dev/null)\necho ::set-output name=status::$(echo $nb_dry_run | grep \"\
        built:\" | sed \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-ssreflect'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-ssreflect"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-field'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-field"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-finmap'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-finmap"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-bigenough'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-bigenough"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-real-closed'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-real-closed"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: hierarchy-builder'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "hierarchy-builder"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-analysis"
  mathcomp-bigenough:
    needs:
    - coq
    - mathcomp-ssreflect
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target mathcomp-bigenough
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"mathcomp-bigenough\" \\\n --dry-run 2>&1\
        \ > /dev/null)\necho ::set-output name=status::$(echo $nb_dry_run | grep \"\
        built:\" | sed \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-ssreflect'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-ssreflect"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-bigenough"
  mathcomp-character:
    needs:
    - coq
    - mathcomp-ssreflect
    - mathcomp-fingroup
    - mathcomp-algebra
    - mathcomp-solvable
    - mathcomp-field
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target mathcomp-character
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"mathcomp-character\" \\\n --dry-run 2>&1\
        \ > /dev/null)\necho ::set-output name=status::$(echo $nb_dry_run | grep \"\
        built:\" | sed \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-ssreflect'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-ssreflect"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-fingroup'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-fingroup"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-algebra'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-algebra"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-solvable'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-solvable"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-field'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-field"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-character"
  mathcomp-field:
    needs:
    - coq
    - mathcomp-ssreflect
    - mathcomp-fingroup
    - mathcomp-algebra
    - mathcomp-solvable
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target mathcomp-field
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"mathcomp-field\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-ssreflect'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-ssreflect"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-fingroup'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-fingroup"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-algebra'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-algebra"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-solvable'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-solvable"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-field"
  mathcomp-fingroup:
    needs:
    - coq
    - mathcomp-ssreflect
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target mathcomp-fingroup
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"mathcomp-fingroup\" \\\n --dry-run 2>&1 >\
        \ /dev/null)\necho ::set-output name=status::$(echo $nb_dry_run | grep \"\
        built:\" | sed \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-ssreflect'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-ssreflect"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-fingroup"
  mathcomp-finmap:
    needs:
    - coq
    - mathcomp-ssreflect
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target mathcomp-finmap
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"mathcomp-finmap\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-ssreflect'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-ssreflect"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-finmap"
  mathcomp-real-closed:
    needs:
    - coq
    - mathcomp-ssreflect
    - mathcomp-field
    - mathcomp-bigenough
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target mathcomp-real-closed
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"mathcomp-real-closed\" \\\n --dry-run 2>&1\
        \ > /dev/null)\necho ::set-output name=status::$(echo $nb_dry_run | grep \"\
        built:\" | sed \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-ssreflect'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-ssreflect"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-field'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-field"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-bigenough'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-bigenough"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-real-closed"
  mathcomp-solvable:
    needs:
    - coq
    - mathcomp-ssreflect
    - mathcomp-fingroup
    - mathcomp-algebra
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target mathcomp-solvable
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"mathcomp-solvable\" \\\n --dry-run 2>&1 >\
        \ /dev/null)\necho ::set-output name=status::$(echo $nb_dry_run | grep \"\
        built:\" | sed \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-ssreflect'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-ssreflect"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-fingroup'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-fingroup"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-algebra'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-algebra"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-solvable"
  mathcomp-ssreflect:
    needs:
    - coq
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target mathcomp-ssreflect
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"mathcomp-ssreflect\" \\\n --dry-run 2>&1\
        \ > /dev/null)\necho ::set-output name=status::$(echo $nb_dry_run | grep \"\
        built:\" | sed \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-ssreflect"
  mathcomp-zify:
    needs:
    - coq
    - mathcomp-algebra
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target mathcomp-zify
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"mathcomp-zify\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-algebra'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-algebra"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-zify"
  metalib:
    needs:
    - coq
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target metalib
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"metalib\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "metalib"
  multinomials:
    needs:
    - coq
    - mathcomp-ssreflect
    - mathcomp-algebra
    - mathcomp-finmap
    - mathcomp-bigenough
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target multinomials
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"multinomials\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-ssreflect'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-ssreflect"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-algebra'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-algebra"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-finmap'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-finmap"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-bigenough'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-bigenough"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "multinomials"
  odd-order:
    needs:
    - coq
    - mathcomp-character
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target odd-order
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"odd-order\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-character'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-character"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "odd-order"
  paco:
    needs:
    - coq
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target paco
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"paco\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "paco"
  paramcoq:
    needs:
    - coq
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target paramcoq
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"paramcoq\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "paramcoq"
  pocklington:
    needs:
    - coq
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target pocklington
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"pocklington\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "pocklington"
  reglang:
    needs:
    - coq
    - mathcomp-ssreflect
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target reglang
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"reglang\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-ssreflect'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-ssreflect"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "reglang"
  relation-algebra:
    needs:
    - coq
    - aac-tactics
    - mathcomp-ssreflect
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target relation-algebra
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"relation-algebra\" \\\n --dry-run 2>&1 >\
        \ /dev/null)\necho ::set-output name=status::$(echo $nb_dry_run | grep \"\
        built:\" | sed \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: aac-tactics'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "aac-tactics"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: mathcomp-ssreflect'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "mathcomp-ssreflect"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "relation-algebra"
  semantics:
    needs:
    - coq
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target semantics
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"semantics\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "semantics"
  simple-io:
    needs:
    - coq
    - coq-ext-lib
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target simple-io
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"simple-io\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq-ext-lib'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq-ext-lib"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "simple-io"
  stdpp:
    needs:
    - coq
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target stdpp
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"stdpp\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "stdpp"
  tlc:
    needs:
    - coq
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target tlc
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"tlc\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "tlc"
  topology:
    needs:
    - coq
    - zorns-lemma
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target topology
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"topology\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: zorns-lemma'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "zorns-lemma"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "topology"
  zorns-lemma:
    needs:
    - coq
    runs-on: ${{ matrix.os }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cachix install
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Cachix setup coq
      uses: cachix/cachix-action@v8
      with:
        name: coq
    - name: Cachix setup coq-community
      uses: cachix/cachix-action@v8
      with:
        authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
        name: coq-community
    - name: Cachix setup math-comp
      uses: cachix/cachix-action@v8
      with:
        name: math-comp
    - id: stepCheck
      name: Checking presence of CI target zorns-lemma
      run: "nb_dry_run=$(NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link \\\n --argstr\
        \ bundle \"8.13\" --argstr job \"zorns-lemma\" \\\n --dry-run 2>&1 > /dev/null)\n\
        echo ::set-output name=status::$(echo $nb_dry_run | grep \"built:\" | sed\
        \ \"s/.*/built/\")\n"
    - if: steps.stepCheck.outputs.status == 'built'
      name: 'Building/fetching previous CI target: coq'
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "coq"
    - if: steps.stepCheck.outputs.status == 'built'
      name: Building/fetching current CI target
      run: NIXPKGS_ALLOW_UNFREE=1 nix-build --no-out-link --argstr bundle "8.13" --argstr
        job "zorns-lemma"
name: Nix CI for bundle 8.13
'on':
  pull_request:
    branches:
    - '**'
  push:
    branches:
    - master
